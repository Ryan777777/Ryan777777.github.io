I"/!<h2 id="python中flask框架的使用">Python中Flask框架的使用</h2>

<h3 id="flask的目录结构">Flask的目录结构</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| - projectName
	| - app  //程序包
		| - templates //jinjia2模板
		| - static //静态文件
		| - main  //py程序包 ，可以有多个这种包。
			| - __init__.py
			|- errors.py
			|- forms.py
			|- views.py
		|- __init__.py
		|- models.py //数据库模型
		|- __init__.py
	|- venv  //虚拟环境
	|- requirements.txt //列出了所有依赖包以及版本号
	|- config.py //全局配置文件，配置全局变量
	|- manage.py //启动程序
</code></pre></div></div>

<h3 id="flask参数传递">Flask参数传递</h3>

<p><strong>session：</strong> 只要设置，在任意请求中都能拿到，无论你拿多少次</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>在flask当中使用 session 时，必须要做一个配置,即 flask的session中需要用到的秘钥字符串，可以是任意值
flask默认把数据存放到了cookie中
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>app.config["SECRET_KEY"] = "renyizifuchuan"
session.pop('username', None) //从session中移除username，如果存在的话
session["name"] = "python" //加入
name = session.get("name") //取出

</code></pre></div></div>

<p><strong>flash：</strong> 一旦设置，可在任意一次请求中获取，但是只能取一次</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>待定
</code></pre></div></div>
<p><strong>g：</strong> 在A路由中设置设置，只能在A路由请求中请求中获取，其它的请求都不能获取</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>待定
</code></pre></div></div>

<h3 id="html前端传数据到后端重点">HTML前端传数据到后端（重点）</h3>
<pre><code class="language-HTML">前端
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
&lt;title&gt;Flask示例&lt;/title&gt;
&lt;/head&gt;
   &lt;body&gt;

      &lt;form action = "http://localhost:5000/result" method = "POST"&gt;
         &lt;p&gt;姓名 &lt;input type = "text" name = "Name" /&gt;&lt;/p&gt;
         &lt;p&gt;&lt;input type = "submit" value = "提交" /&gt;&lt;/p&gt;
      &lt;/form&gt;

   &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">后端</span>
<span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/result'</span><span class="p">,</span><span class="n">methods</span> <span class="o">=</span> <span class="p">[</span><span class="s">'POST'</span><span class="p">,</span> <span class="s">'GET'</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">result</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">request</span><span class="p">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">'POST'</span><span class="p">:</span>
        <span class="n">result</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">form</span> <span class="o">/</span><span class="n">取得整个提交的表格</span>
        <span class="n">result2</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">form</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"Name"</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">str</span><span class="p">,</span><span class="n">default</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="n">result2</span><span class="o">+</span> <span class="s">"test"</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">"result.html"</span><span class="p">,</span><span class="n">result</span> <span class="o">=</span> <span class="n">result</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="html后端传数据到前端重点">HTML后端传数据到前端（重点）</h3>
<pre><code class="language-HTML">前端
      &lt;th&gt;  &lt;/th&gt;
</code></pre>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">后端</span>
<span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/result'</span><span class="p">,</span><span class="n">methods</span> <span class="o">=</span> <span class="p">[</span><span class="s">'POST'</span><span class="p">,</span> <span class="s">'GET'</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">result</span><span class="p">():</span>
        <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">"result.html"</span><span class="p">,</span><span class="n">result</span> <span class="o">=</span> <span class="n">result</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="api接入">API接入</h3>
<p>Ensembl API的接入. 如何构建URL.</p>

<pre><code class="language-Python">@app.route('/Ensembl', methods=['GET', 'POST'])
def index():
    server = "http://rest.ensembl.org"
    ext = "/archive/id/ENSG00000157764?"

    r = requests.get(server + ext, headers={"Content-Type": "application/json"})

    if not r.ok:
        r.raise_for_status()
        sys.exit()

    decoded = r.json()
    //返回打印json文件到网页
    return json.dumps(decoded ,ensure_ascii=False)
</code></pre>

<h3 id="重定向到前端">重定向到前端</h3>

<p>多个URL对应一个function, 转到新的html (render_template)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/hello/'</span><span class="p">)</span>
<span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/hello/&lt;name&gt;'</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">hello</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">'hello.html'</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="前端转后端function">前端转后端function</h3>

<pre><code class="language-Python">&lt;button onclick="window.location.href=''"&gt;Button名字&lt;/button&gt;
</code></pre>

<h3 id="读取url中值作为输入">读取URL中值作为输入</h3>
<pre><code class="language-Python">//String
@app.route('/user/&lt;username&gt;')
def show_user_profile(username):
    # show the user profile for that user
    return 'User %s' % username

//Int
@app.route('/post/&lt;int:post_id&gt;')
def show_post(post_id):
    # show the post with the given id, the id is an integer
    return 'Post %d' % post_id

//以URL的值作为传递方法
@app.route('/upload', methods=['POST', 'GET'])
def upload():
    filename = 'NewFile'
    return redirect(url_for('show', filename=filename))
@app.route('/show?filename=&lt;filename&gt;')
def show(filename):
    return filename
</code></pre>

<h3 id="debug模式">Debug模式</h3>

<p>注意在Pycharm中需要手动开启debug模式</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-- Run/Debug Configurations
      FLASK_DEBUG 打勾
</code></pre></div></div>
<pre><code class="language-Python">if __name__ == '__main__':
    app.debug = True
    app.run()
</code></pre>
:ET